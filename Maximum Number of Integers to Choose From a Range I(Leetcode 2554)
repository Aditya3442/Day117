class Solution {
    public boolean search(int[] arr, int x) {
        int l = 0;
        int r = arr.length - 1;
        while (l <= r) {
            int m = l + (r - l) / 2;
            if (arr[m] == x) 
                return true;
            if (arr[m] > x) {
                r = m - 1;
            } else {
                l = m + 1;
            }
        }
        return false;
    }
    public int maxCount(int[] banned, int n, int maxSum) {
        int c = 0;
        Arrays.sort(banned);
        for (int i = 1; i <= n; i++) {
            if (search(banned, i)) 
                continue;
            maxSum -= i;
            if (maxSum < 0) break;
            c++;
        }
        return c;
    }
}
